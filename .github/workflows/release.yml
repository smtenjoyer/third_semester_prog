name: 'C++ CI'

on: 
  push:
    branches:
      - laba2
      - feature/github_actions

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - name: Configure CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }} 
      - name: Сборка проекта
        run: cmake --build .
      - name: Запуск тестов
        run: |
          cd build
          ctest --output-on-failure || exit 1  
      - name: Упаковка проекта
        run: cmake --build . --target package # Убедитесь, что target package определен в CMakeLists.txt
      - name: Создать релиз
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (Ubuntu)
          draft: false
          prerelease: false
      - name: Загрузить релизный ассет
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ip_check-0.0.${{ github.run_number }}-Linux.deb # Укажите правильный путь к .deb-файлу
          asset_name: ip_check-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
          allowUpdates: true

  build_macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure || exit 1  
      - run: cmake --build . --target package
      - name: Create Release (MacOS)
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }} 
          release_name: Release ${{ github.run_number }} (MacOS)
          draft: false
          prerelease: false
      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./ip_check-0.0.${{ github.run_number }}-Darwin.zip
          asset_name: ip_check-0.0.${{ github.run_number }}-Darwin.zip
          asset_content_type: application/zip
