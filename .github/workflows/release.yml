name: 'C++ CI'

on: 
  push:
    branches:
      - laba2
      - feature/github_actions

jobs:
  build_and_test:
  runs-on: ubuntu-latest
  permissions: write-all
  steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install libboost-test-dev -y

    # Create a build directory
    - name: Create Build Directory
      run: mkdir build

    # Configure CMake, specifying the source directory
    - name: Configure CMake
      run: |
        cd build
        cmake .. -DPATCH_VERSION=${{ github.run_number }} 

    # Build the project
    - name: Build Project
      run: |
        cd build
        cmake --build .

    # Run tests
    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure || exit 1  

    # Package the project (ensure that 'package' target is defined in CMakeLists.txt)
    - name: Package Project
      run: |
        cd build
        cmake --build . --target package

    # Create a release on GitHub
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }} (Ubuntu)
        draft: false
        prerelease: false

    # Upload release asset
    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ip_check-0.0.${{ github.run_number }}-Linux.deb # Ensure this path is correct
        asset_name: ip_check-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package
        allowUpdates: true

  build_macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure || exit 1  
      - run: cmake --build . --target package
      - name: Create Release (MacOS)
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }} 
          release_name: Release ${{ github.run_number }} (MacOS)
          draft: false
          prerelease: false
      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./ip_check-0.0.${{ github.run_number }}-Darwin.zip
          asset_name: ip_check-0.0.${{ github.run_number }}-Darwin.zip
          asset_content_type: application/zip
