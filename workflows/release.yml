name: 'C++ CI'

on: 
  push:
    branches:
      - laba3
      - feature/github_actions

jobs:
  build_and_package_ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libboost-test-dev

      # Configure CMake
      - name: Configure CMake
        run: cmake -S . -B build -DPATCH_VERSION=${{ github.run_number }}

      # Build the project
      - name: Build Project
        run: cmake --build build

      # Package the project
      - name: Package Project
        run: cmake --build build --target package

      # Create a release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (Ubuntu)
          draft: false
          prerelease: false

      # Upload release asset for Ubuntu
      - name: Upload Release Asset (Ubuntu)
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ProgLaba3-0.1.0-${{ github.run_number }}-Linux.deb  # Adjust if necessary.
          asset_name: ProgLaba3-0.1.0-${{ github.run_number }}-Linux.deb  # Adjust if necessary.
          asset_content_type: application/vnd.debian.binary-package

  build_and_package_macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install Dependencies (MacOS)
        run: brew install boost
      
      # Configure project for MacOS using CMake 
      - name: Configure CMake (MacOS)
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      # Build project 
      - name: Build Project (MacOS)
        run: cmake --build .
      
      # Create package 
      - name: Package Project (MacOS)
        run: cmake --build . --target package
      
      # Create release for MacOS 
      - name: Create Release (MacOS)
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (MacOS)
          draft: false 
          prerelease: false 
      
      # Upload release asset for MacOS 
      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./ProgLaba3-0.1.0-${{ github.run_number }}-Darwin.zip  # Adjust if necessary.
          asset_name: ProgLaba3-0.1.0-${{ github.run_number }}-Darwin.zip  # Adjust if necessary.
          asset_content_type: application/zip 